
package com.sahand.issuer.services.missingTransaction;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;

import com.sahand.common.util.logger.SahandLogger;

/**
 * This class was generated by the JAXWS SI. JAX-WS RI 2.1-02/02/2007 03:56
 * AM(vivekp)-FCS Generated source version: 2.1
 */
@WebServiceClient(name = "MissingTransactionService", targetNamespace = "http://service.loyalty.authorizer.sahand.com/" /*, wsdlLocation = "file:/C:/Documents and Settings/hasani.zohre/Desktop/MissingTransaction.wsdl"*/)
public class MissingTransactionPortService
	extends Service
{
	private static Logger logger = SahandLogger.getSahandLogger(MissingTransactionPortService.class);
    private final static URL MISSINGTRANSACTIONSERVICE_WSDL_LOCATION;
    
    static
    {
	URL url = null;
	
	String filePath;
	String strurl = "";
	try
	{
	    
	    if (!System.getenv("SAHAND_HOME").equals(null))
	    {
		filePath = System.getenv("SAHAND_HOME") + System.getProperties().getProperty("file.separator") + "missingTransaction.txt";
		
		FileInputStream fin = new FileInputStream(filePath);
		strurl = new BufferedReader(new InputStreamReader(fin)).readLine();

	    	}
	    	 url = new URL(strurl);
	    	
	    	 logger.info("*************** url ************** ");
	    	 logger.debug(url.toString());
	    	 logger.info(url.toString());
	    	 logger.info("*************** url ************** ");
	    
	    url = new URL(strurl);
	    
	}
	catch (MalformedURLException e)
	{
	    e.printStackTrace();
	}
	catch (Exception e)
	{
	    e.printStackTrace();
	}
	
	MISSINGTRANSACTIONSERVICE_WSDL_LOCATION = url;
    
    }
    
    public MissingTransactionPortService(URL wsdlLocation, QName serviceName)
    {

	super(wsdlLocation, serviceName);
    }
    
    public MissingTransactionPortService()
    {

	super(MISSINGTRANSACTIONSERVICE_WSDL_LOCATION, new QName("http://service.loyalty.authorizer.sahand.com/", "MissingTransactionService"));
    }
    
    /**
     * @return returns MissingTransaction
     */
    @WebEndpoint(name = "MissingTransactionPort")
    public MissingTransactionService getMissingTransactionPort()
    {

	System.out
				.println("MissingTransactionService.getMissingTransactionPort()");
	return (MissingTransactionService) super.getPort(new QName("http://service.loyalty.authorizer.sahand.com/", "MissingTransactionPort"), MissingTransactionService.class);
    }
    
    /**
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
     *            on the proxy. Supported features not in the
     *            <code>features</code> parameter will have their default
     *            values.
     * @return returns MissingTransaction
     */
    @WebEndpoint(name = "MissingTransactionPort")
    public MissingTransactionService getMissingTransactionPort(WebServiceFeature... features)
    {

	return (MissingTransactionService) super.getPort(new QName("http://service.loyalty.authorizer.sahand.com/", "MissingTransactionPort"), MissingTransactionService.class, features);
    }
    
}
